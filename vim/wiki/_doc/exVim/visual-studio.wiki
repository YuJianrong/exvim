<!-- ======================================================================================-->
<!-- File         : visual-studio.wiki-->
<!-- Author       : Wu Jie -->
<!-- Last Change  : 05/05/2009 | 16:01:30 PM | Tuesday,May-->
<!-- Description  : -->
<!-- ======================================================================================-->

= visual-studio =

== Intro ==
--------------------------------------------------------------------------------------

Before I using this plugin, I'm seeking in a way to make vim work with `MS-VisualStudio`.
None of the way I found satisfy me, until this great plugin come out. I strongly recommend
every programmer working with VS.net install this plugin, cause it saves me a lot of time.

The basic idea is to use python and pywin32 create a com connection between `MS-VisualStudio`
and vim, and sending the command through vim to VS.net, then wait for responding. With the
idea, you can:

    * Compile and get compile error in vim 
    * Put current edit file to VS.net from vim
    * Get current edit file from VS.net to vim
    * Set break point
    * and so on...

You need install python2.x and pywin32 to run the plugin. Here is the download address:

    * python: [http://www.python.org]
        * pywin32: [http://sourceforge.net/projects/pywin32/]

Also I recommend you compile vim with the python. 

This can be done by writing the compile option below in unix/linux:

{{{
--enable-pythoninterp
}}}

or writing similar compile command below in win32:

{{{
"PYTHON=d:\exDev\Python25 DYNAMIC_PYTHON=YES PYTHON_VER=25"
}}}

== What I changed ==
--------------------------------------------------------------------------------------

*# Use exQuickFix load compile error from VS.net*

The default plugin use quickfix load compile errors when finishing compile in VS.net. I 
change and load the errors to exQuickFix.

*# Add putting break point method*

I add functions so that user can put break point in VS.net directly through vim. This can
be done by pressing `\vk`

*# Add putting watching variable method*

I add functions so that user can add current word to VS.net watch window directly through vim. 
This can be done by pressing `\vw`

*# Change several key mappings*

Since the key mappings conflict, I changes several key mappings: 
|| *Mapping* || *Action* ||
||`\vg` change to `\vo` ||Get the VS file into Vim ||
||`\vp` keep the same ||Put the Vim file into VS ||
||`\vt` change to `\vgt` ||Load the VS Task List into the Vim quickfix buffer ||
||`\vo` change to `\vgo` ||Load the VS Output window into the Vim quickfix buffer ||
||`\vf` change to `\vf1` ||Load the VS Find Results 1 window into the Vim quickfix buffer ||
||`\v2` change to `\vf2` ||Load the VS Find Results 2 window into the Vim quickfix buffer ||
||`\vb` keep the same ||Build the VS Solution ||
||`\vu` keep the same ||Build the VS Startup Project ||
||`\vc` keep the same ||Compile the current file ||
||`\vs` keep the same ||Select the current VS Solution instance ||
||`\vp` change to `\vj` ||Select the current VS Startup Project ||
||`\va` keep the same ||About visual_studio.vim ||
||`\vh` keep the same ||Online help - this page! ||
||`\vk` new mappping ||add break piont to VS ||
||`\vw` new mappping ||add current word to VS watch window ||

== My settings in vimrc ==
--------------------------------------------------------------------------------------

Here is my settings of visual-studio in my vimrc file:

{{{
" exEnvironmentSetting post update
" NOTE: this is a post update environment function used for any custom environment update 
function g:exES_PostUpdate()

	" set visual_studio plugin variables
	if exists( 'g:exES_vsTaskList' )
		let g:visual_studio_task_list = g:exES_vsTaskList
	endif
	if exists( 'g:exES_vsOutput' )
		let g:visual_studio_output = g:exES_vsOutput
	endif
	if exists( 'g:exES_vsFindResult1' )
		let g:visual_studio_find_results_1 = g:exES_vsFindResult1
	endif
	if exists( 'g:exES_vsFindResult2' )
		let g:visual_studio_find_results_2 = g:exES_vsFindResult2
	endif

endfunction
}}}

For details of `g:exES_PostUpdate`, check section [[exEnvironment]].  

== Links ==
--------------------------------------------------------------------------------------

    * Original version on [http://www.vim.org/scripts/script.php?script_id=864 vim scripts]
    * [http://www.plan10.com/vim/visual-studio/doc/1.2/ Online document]
    * python: [http://www.python.org]
        * pywin32: [http://sourceforge.net/projects/pywin32/]
